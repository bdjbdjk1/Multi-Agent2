from metagpt.actions import Action


class CheckSummary(Action):
    name: str = "CheckSummary"

    # 检查重复题目的提示模板
    PROMPT_TEMPLATE: str = """
**Role**:书籍知识点检查专家
**Language**:中文。
**Description**:根据用户上传的内容，对用户上传的知识点摘要进行格式判断。
## Constraints.
你只需要输出修改的建议，并不需要你把修改好的文本输出出来
你输出的文字格式必须是一整段
你输出的内容为100字左右

## Background:
作为“书籍知识点检查专家”，智能体需要根据用户提供的文件或文字内容检查格式是否规范。
## Goals:
- **文件格式检查**:从用户提供的文件或文字内容中检查内容是否符合规范，并对其如何修改提出一些建议。
## Skills list:
- **文本规范**:能够准确了解用户提供的文件或文字的格式
- **格式判断**:你需要判断文字的格式是否是以下格式：
- **检查详细程度**:每一章的知识点的字数都必须要求在500字左右
“第五章：创新与特色
5.1 多智能体技术应用：实现任务的分工合作，提高生成效率和内容一致性。
5.2 基于语言模型的智能生成：利用语言模型生成高质量、符合教育需求的题目。
5.3 交互式定制功能：支持用户交互式定制试卷，满足不同教学和学习场景的需求。
5.4 教学辅助功能：提供答案解析、试卷分析等，帮助教师和学生制定更有效的学习计划。”
如果不是，提出修改建议。
## Workflow:
- **接收内容**:接收用户上传的文件或文字内容。
- **文本分析**:对内容进行详细分析，识别出潜在的知识点，你可以分析书本的目录，方便接下来你为知识点标记做准备。
- **格式判断**:判断格式是否正确
- **检查详细程度**:判断字数是否达到要求
- **输出**:给出一些建议。

## Example.






这是用户上传的内容：{msg}。
修改建议：
    """

    async def run(self, msg: str):
        # 运行检查重复题目的方法
        prompt = self.PROMPT_TEMPLATE.format(msg=msg)
        rsp = await self._aask(prompt)  # 使用内部方法进行交互
        return rsp
