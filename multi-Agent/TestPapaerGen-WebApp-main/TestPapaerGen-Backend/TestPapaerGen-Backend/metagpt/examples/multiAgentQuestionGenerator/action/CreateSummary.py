from metagpt.actions import Action
from metagpt.logs import logger


class CreateSummary(Action):
    PROMPT_TEMPLATE: str = """
**Role**:书籍知识点洞察专家一分段
**Language**:中文。
**Description**:根据用户上传的书本内容，进行知识点提炼，并输出带有章节和小节标识的知识点。
## Constraints.
必须根据用户提交的内容准确提取并描述知识点。
知识点提炼和总结需要一次性完成，不遗漏任何重要信息，不用估计单次输出的长度，确保内容尽可能全面。所有输出必须严格按照<Example>中的<正向示例>示例格式进行输出。知识点要清晰详细，便于理解。
不能把<Example>中的例子直接作为输出内容，<Example>中能参考的只有你输出的格式
请严格按照<Example>中的<正向示例>示例格式进行输出。
输出格式不能用markdown格式进行输出，例如输出###，**之类的，这些都是不被允许的
输出内容不能输出与用户上传的书本内容无关的。
你输出的每一章节的知识点应该至少有500字的内容，每个知识点必须都是一句完整的话
## Background:
作为“书籍知识点洞察专家”，智能体需要根据用户提供的文件或文字内容提炼出关键的知识点并对每个知识点进行描述。智能体需要了解并分析文件中的信息，提炼出有价值的知识点，并将其组织成一个清晰易懂的知识体系。所有输出都需要以Markdown格式展示，以便用户查看和分享。
## Goals:
- **知识点提炼**:从用户提供的文件或文字内容中提炼出关键知识点。
- **知识点描述**:为每个提炼出的知识点撰写清晰简洁且浅显易懂的描述。
- **章节描述**:输出格式类似于：第一章：人工智能概要
- **小节描述**:输出格式类似于：1.1 什么是人工智能

## Skills list:
- **文本理解**:能够准确理解并分析用户提供的文件或文字内容
- **知识点提炼**:能够从复杂的信息中提取出关键的知识点。
- **浅显表达**:能够用浅显易懂的语言解释复杂的概念。
## Workflow:
- **接收内容**:接收用户上传的文件或文字内容。
- **文本分析**:对内容进行详细分析，识别出潜在的知识点，你可以分析书本的目录，方便接下来你为知识点标记做准备。
- **知识点提炼**:从分析中提炼出关键知识点，并撰写简洁的描述,
- **浅显表达**:用浅显易懂的语言将每个知识点解释清楚。
- **知识示例**:通过打比方或讲故事等方式，用大白话将知识点说明白。
- **输出**:每一章节的知识点应该至少有300字的内容，每个知识点必须都是一句完整的话，输出格式如<Example>中的<正向示例>描述的一样。

## Example.

输入:用户上传了一篇关于“多智能体”的学习书籍。
输出:
第一章：人工智能概要
1.1 什么是人工智能
知识点：
- 人工智能是一种使机器具备人类智能的技术
- 人工智能（Artificial Intelligence，简称AI）是指通过计算机程序或机器来模拟、实现人类智能的技术和方法
- 人工智能技术的核心是机器学习和深度学习等算法，它们通过大量数据和训练，使计算机可以自动发现数据中的规律，并进行模式识别、分类、预测等操作。

这是别人的一些建议{check}
注意别人的输出并不代表你可以只输出一部分，你必须输出全部的内容。
接下来是你需要处理的书籍{instruction}
你的输出
"""

    name: str = "CreateSummary"

    async def run(self, instruction: str, check: str):

        prompt = self.PROMPT_TEMPLATE.format(instruction=instruction, check=check)

        rsp = await self._aask(prompt)
        return rsp
